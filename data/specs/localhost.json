{
  "openapi": "3.0.1",
  "info": {
    "title": "Dev Connect API",
    "description": "The Dev Connect API powers a collaborative platform where developers can build professional profiles, share projects, solve coding challenges, and connect with peers, mentors, and recruiters. Designed with flexibility and scalability in mind, this RESTful API enables seamless integration across web and mobile platforms.\n",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/update-resume": {
      "put": {
        "tags": [
          "resume-controller"
        ],
        "operationId": "updateResumes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseResume"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/topics/{TopicId}": {
      "get": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Get topic by id",
        "operationId": "getTopicsById",
        "parameters": [
          {
            "name": "TopicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseTopic"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Update a topic by ID",
        "operationId": "updateTopics",
        "parameters": [
          {
            "name": "TopicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseTopic"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Delete a topic by ID",
        "operationId": "deleteTopics",
        "parameters": [
          {
            "name": "TopicId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruiter-profile/update": {
      "put": {
        "tags": [
          "recruiter-controller"
        ],
        "operationId": "updateRecruiterProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecruiterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseRecruiter"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/{project-id}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get project by id",
        "operationId": "getProjectById",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "Update project by id",
        "operationId": "updateProjectById",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "Delete project by id and user",
        "operationId": "deleteProjectByIdAndUser",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/{join-job-id}": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "operationId": "getJoinJobById",
        "parameters": [
          {
            "name": "join-job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobDetailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "join-job-controller"
        ],
        "operationId": "updateIsApprove",
        "parameters": [
          {
            "name": "join-job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isApprove",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobs/{JobId}": {
      "get": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "getJobsById",
        "parameters": [
          {
            "name": "JobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJobs"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "updateJobs",
        "parameters": [
          {
            "name": "JobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "deleteJobs",
        "parameters": [
          {
            "name": "JobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobs/job-status/{JobId}": {
      "put": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "updateStatusJobs",
        "parameters": [
          {
            "name": "JobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/{hackathon-id}": {
      "get": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Get a hackathon by ID",
        "operationId": "getHackathonById",
        "parameters": [
          {
            "name": "hackathon-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseHackathon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Update a hackathon by ID",
        "operationId": "updateHackathonById",
        "parameters": [
          {
            "name": "hackathon-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HackathonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseHackathon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Delete a hackathon by ID",
        "operationId": "deleteHackathonById",
        "parameters": [
          {
            "name": "hackathon-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/comments/{commentId}": {
      "put": {
        "tags": [
          "comments-controller"
        ],
        "summary": "Update a Comment by ID",
        "operationId": "updateComments",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseComment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "comments-controller"
        ],
        "summary": "Delete a Comment by ID",
        "operationId": "deleteComments",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/update/{codeId}": {
      "put": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Update a code challenge by ID",
        "operationId": "updateCodeChallenge",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCodingChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/developer-profile/complete-profile": {
      "put": {
        "tags": [
          "developer-profiles-controller"
        ],
        "operationId": "completeProfiDeveloperProfiles",
        "parameters": [
          {
            "name": "positionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "jobTypeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperProfilesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeveloperProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/upvote/{commentId}": {
      "post": {
        "tags": [
          "upvote-controller"
        ],
        "summary": "Upvote Comment",
        "operationId": "createUpvote",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUpvote"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/topics/create": {
      "post": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Create a new topic",
        "operationId": "createTopics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseTopic"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/submission/testCode/{codeId}": {
      "post": {
        "tags": [
          "submission-controller"
        ],
        "operationId": "testStudentCode",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/submission/submitCode/{codeId}": {
      "post": {
        "tags": [
          "submission-controller"
        ],
        "operationId": "submitStudentCode",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitCodeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/request/join/{project-id}": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "Request to join project",
        "operationId": "createRequestJoinProject",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestToJoinProject"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/invite/join/{project-id}": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "Invite to join project",
        "operationId": "createInviteJoinProject",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/create": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "Create project",
        "operationId": "createProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/verify-password": {
      "post": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Verify old password",
        "operationId": "verifyOldPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/change-password": {
      "post": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Change password",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/{job-id}": {
      "post": {
        "tags": [
          "join-job-controller"
        ],
        "operationId": "createJoinJob",
        "parameters": [
          {
            "name": "job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/invite-job/{job-id}/{developer-id}": {
      "post": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "invite developer to job",
        "operationId": "inviteJob",
        "parameters": [
          {
            "name": "job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "developer-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteJobRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/approve-invite/{join-job-id}": {
      "post": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "approve invite job",
        "operationId": "approveInviteJob",
        "parameters": [
          {
            "name": "join-job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobs": {
      "get": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "getAllJobs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "createJobs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons": {
      "get": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Get all hackathons",
        "operationId": "getAllHackathons",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListHackathonResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Create a hackathon",
        "operationId": "createHackathon",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HackathonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseHackathon"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/join-hackathon/{hackathon-id}": {
      "post": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Join hackathon",
        "operationId": "joinHackathon",
        "parameters": [
          {
            "name": "hackathonId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/files/upload-file": {
      "post": {
        "tags": [
          "file-controller"
        ],
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseFileMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/create-resume": {
      "post": {
        "tags": [
          "resume-controller"
        ],
        "operationId": "createResumes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseResume"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/create": {
      "post": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Create a new code challenge",
        "operationId": "createCodeChallenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCodingChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/bookmark/create": {
      "post": {
        "tags": [
          "bookmark-controller"
        ],
        "summary": "Create bookmark",
        "operationId": "createProfileBookmark",
        "parameters": [
          {
            "name": "targetId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseBookmark"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/auths/verify": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Verify email with OTP",
        "operationId": "verify",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otpCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/resend": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Resent verification OTP",
        "operationId": "resend",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/register": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Register a new user",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAppUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "User login",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/forgot": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Send otp code to email",
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/forgot/verify": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Verify otp in forgot password",
        "operationId": "verifyForgot",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auths/forgot/reset": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Reset password otp in forgot password",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/developer-profile/add-github-username/{github-username}": {
      "post": {
        "tags": [
          "developer-profiles-controller"
        ],
        "operationId": "addGithubUsername",
        "parameters": [
          {
            "name": "github-username",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z0-9_-]{1,39}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/update-status/{project-id}": {
      "patch": {
        "tags": [
          "project-controller"
        ],
        "summary": "Update project status to close",
        "operationId": "updateProjectStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseProjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/update-join-status/{project-id}/{developer-id}": {
      "patch": {
        "tags": [
          "project-controller"
        ],
        "summary": "Update project status approval",
        "operationId": "updateApprovalTrue",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "developer-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/accept-invite/{project-id}": {
      "patch": {
        "tags": [
          "project-controller"
        ],
        "summary": "Accept invite",
        "operationId": "acceptProjectInvite",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/submit-hackathon/{hackathon-id}": {
      "patch": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Submit hackathon",
        "operationId": "submitHackathon",
        "parameters": [
          {
            "name": "hackathon-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitHackathonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/evaluate_developer/{hackathon-id}": {
      "patch": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Evaluate joined developer",
        "operationId": "evaluateDeveloper",
        "parameters": [
          {
            "name": "hackathon-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EvaluateDeveloperRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/topics": {
      "get": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Get all topics",
        "operationId": "getAllTopics",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListTopicResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/topics/current-user": {
      "get": {
        "tags": [
          "topic-controller"
        ],
        "summary": "Get topics by current user",
        "operationId": "getTopicsByCurrentUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListTopicResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/submission/leaderboard": {
      "get": {
        "tags": [
          "submission-controller"
        ],
        "operationId": "getALlSubmission",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListSubmissionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruiter-profile": {
      "get": {
        "tags": [
          "recruiter-controller"
        ],
        "operationId": "getRecruiterProfile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseRecruiter"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get all projects",
        "operationId": "getAllProjects",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "dateStatus",
            "in": "query",
            "description": "Filter project by status",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter project by status",
              "enum": [
                "OPEN",
                "PROGRESS",
                "FINISHED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListProjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/users": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get all project by user",
        "operationId": "getAllProjectByUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "dateStatus",
            "in": "query",
            "description": "Filter project by status",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter project by status",
              "enum": [
                "OPEN",
                "PROGRESS",
                "FINISHED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListProjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/users/{project-id}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get project by id and user",
        "operationId": "getProjectByIdAndUser",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/project-history": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "History of created project",
        "operationId": "getAllProjectHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListProjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/position/{project-id}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get all position in a project by id",
        "operationId": "getAllPositionByProjectId",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListProjectPosition"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/join-project": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "Get all developer that join by request or invite in the project",
        "operationId": "getJoinProjectByOwner",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "isInvited",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "positionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinProject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/join-project-history": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "History of joined project",
        "operationId": "getAllJoinedProject",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListProjectResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "operationId": "getAllJoinJob",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "positionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "jobType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/job-owner/{job-id}": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "get all apply by job id by current user",
        "operationId": "getJoinJobByJobId",
        "parameters": [
          {
            "name": "job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isApprove",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/invite-job/{job-id}": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "list all developer who are invited to job",
        "operationId": "getAllInviteJob",
        "parameters": [
          {
            "name": "job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/approve-application": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "list all join job by status",
        "operationId": "getAllJoinJobByIsApprove",
        "parameters": [
          {
            "name": "isApprove",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/all-invitation": {
      "get": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "get all invitation by current user",
        "operationId": "getAllInvitation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobs/my-all-job": {
      "get": {
        "tags": [
          "jobs-controller"
        ],
        "operationId": "getAllJobsByCreatorId",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skills",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/recruiter": {
      "get": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "Get hackathons by Current user",
        "operationId": "getAllHackathonsByCurrentUser",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListHackathonResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/hackathons/history": {
      "get": {
        "tags": [
          "hackathon-controller"
        ],
        "summary": "History of joined hackathon",
        "operationId": "getJoinedHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListHackathonResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/get-resume": {
      "get": {
        "tags": [
          "resume-controller"
        ],
        "operationId": "getCurrentResume",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseResume"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/files/preview-file/{file-name}": {
      "get": {
        "tags": [
          "file-controller"
        ],
        "operationId": "getFileByFileName",
        "parameters": [
          {
            "name": "file-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/data/get-badge-current-user": {
      "get": {
        "tags": [
          "get-default-data-controller"
        ],
        "operationId": "getBadgeCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeveloperBadge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/data/get-all-skills": {
      "get": {
        "tags": [
          "get-default-data-controller"
        ],
        "operationId": "getAllSkill",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListSkill"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/data/get-all-positions": {
      "get": {
        "tags": [
          "get-default-data-controller"
        ],
        "operationId": "getAllPositions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListPosition"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/data/get-all-job-types": {
      "get": {
        "tags": [
          "get-default-data-controller"
        ],
        "operationId": "getAllJobTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListJobType"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/get-by-id/{codeId}": {
      "get": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Get a code challenge by ID",
        "operationId": "getCodeChallengeById",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCodingChallengeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/get-all": {
      "get": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Get all code challenges",
        "operationId": "getAllCodeChallenge",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListCodingChallengeResponseCard"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/by-user": {
      "get": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Get all code challenges by Current User",
        "operationId": "getAllCodeChallengesByUserId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListCodingChallengeResponseCard"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/bookmark": {
      "get": {
        "tags": [
          "bookmark-controller"
        ],
        "summary": "Get all user's bookmark",
        "operationId": "getAllBookmarkByUser",
        "parameters": [
          {
            "name": "bookmarkType",
            "in": "query",
            "description": "choose target type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "choose target type",
              "enum": [
                "PROJECTS",
                "HACKATHONS",
                "RECRUITERS",
                "DEVELOPERS",
                "JOBS"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/developer-profile": {
      "get": {
        "tags": [
          "developer-profiles-controller"
        ],
        "operationId": "getCurrentProfileDev",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDeveloperProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/developer-profile/get-github-username": {
      "get": {
        "tags": [
          "developer-profiles-controller"
        ],
        "operationId": "getGithubUsername",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/developer-profile/all-developer": {
      "get": {
        "tags": [
          "developer-profiles-controller"
        ],
        "summary": "Get all developer",
        "operationId": "getAllDeveloper",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListDeveloperProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/upvote/un-upvote/{commentId}": {
      "delete": {
        "tags": [
          "upvote-controller"
        ],
        "summary": "Un-Upvote Comment",
        "operationId": "deleteUpvote",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseUpvote"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/join-project/{project-id}": {
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "Reject or Cancel invitation or request for owner of the project",
        "operationId": "deleteJoinProject",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "developerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/projects/join-project/cancel/{project-id}": {
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "Cancel request",
        "operationId": "cancelRequest",
        "parameters": [
          {
            "name": "project-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/join-jobs/delete-invite/{join-job-id}": {
      "delete": {
        "tags": [
          "join-job-controller"
        ],
        "summary": "cancel invite job and reject invite",
        "operationId": "cancelInviteJob",
        "parameters": [
          {
            "name": "join-job-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseJoinJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/delete-resume": {
      "delete": {
        "tags": [
          "resume-controller"
        ],
        "operationId": "deleteResumes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseResume"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/code-challenge/delete/{codeId}": {
      "delete": {
        "tags": [
          "code-challenge-controller"
        ],
        "summary": "Delete a code challenge by ID",
        "operationId": "deleteCodeChallenge",
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseCodeChallenge"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/bookmark/delete": {
      "delete": {
        "tags": [
          "bookmark-controller"
        ],
        "summary": "Delete bookmark",
        "operationId": "deleteBookmark",
        "parameters": [
          {
            "name": "targetId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Education": {
        "required": [
          "endYear",
          "schoolLocation",
          "schoolName",
          "startYear"
        ],
        "type": "object",
        "properties": {
          "schoolName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "schoolLocation": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9,\\s]+$",
            "type": "string"
          },
          "startYear": {
            "type": "string",
            "format": "date"
          },
          "endYear": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ExperienceRequest": {
        "required": [
          "companyLocation",
          "companyName",
          "position"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "companyLocation": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9\\s]+$",
            "type": "string"
          },
          "position": {
            "type": "string",
            "format": "uuid"
          },
          "startYear": {
            "type": "string",
            "format": "date"
          },
          "endYear": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Language": {
        "required": [
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[a-zA-Z]+$",
            "type": "string"
          }
        }
      },
      "Reference": {
        "required": [
          "email",
          "jobTitle",
          "name",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^\\+\\d{1,3}-\\d{6,10}$",
            "type": "string",
            "default": "+855-86451138"
          },
          "jobTitle": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "email": {
            "pattern": "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}$",
            "type": "string"
          }
        }
      },
      "ResumeInformationRequest": {
        "required": [
          "educations",
          "languages",
          "skills"
        ],
        "type": "object",
        "properties": {
          "educations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "experiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperienceRequest"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          }
        }
      },
      "ResumeRequest": {
        "required": [
          "address",
          "description",
          "dob",
          "email",
          "fullName",
          "information",
          "isFemale",
          "phoneNumber",
          "picture",
          "placeOfBirth",
          "position"
        ],
        "type": "object",
        "properties": {
          "fullName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string",
            "example": "John Doe",
            "default": "Sok Chanthy"
          },
          "isFemale": {
            "type": "boolean"
          },
          "phoneNumber": {
            "pattern": "^\\+\\d{1,3}-\\d{6,10}$",
            "type": "string"
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
            "type": "string",
            "example": "example@gmail.com",
            "default": "example@gmail.com"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "picture": {
            "pattern": "^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|jpeg|png)$",
            "type": "string"
          },
          "position": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "information": {
            "$ref": "#/components/schemas/ResumeInformationRequest"
          }
        }
      },
      "ApiResponseResume": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Resume"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Experience": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "companyLocation": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "startYear": {
            "type": "string",
            "format": "date"
          },
          "endYear": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "PaginationResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "previousPage": {
            "type": "integer",
            "format": "int32"
          },
          "firstPage": {
            "type": "integer",
            "format": "int32"
          },
          "lastPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Resume": {
        "type": "object",
        "properties": {
          "resumeId": {
            "type": "string",
            "format": "uuid"
          },
          "fullName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "picture": {
            "type": "string"
          },
          "isFemale": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "position": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "information": {
            "$ref": "#/components/schemas/ResumeInformation"
          },
          "developerId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ResumeInformation": {
        "type": "object",
        "properties": {
          "educations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          },
          "experiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experience"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            }
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          }
        }
      },
      "Skill": {
        "required": [
          "skillName"
        ],
        "type": "object",
        "properties": {
          "skillName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "TopicRequest": {
        "required": [
          "content",
          "tags",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ApiResponseTopic": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Topic"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AppUserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isRecruiter": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "profileImageUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          },
          "postedAt": {
            "type": "string",
            "format": "date"
          },
          "totalUpvote": {
            "type": "integer",
            "format": "int32"
          },
          "topicId": {
            "type": "string",
            "format": "uuid"
          },
          "creator": {
            "$ref": "#/components/schemas/AppUserResponse"
          },
          "parentId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Topic": {
        "type": "object",
        "properties": {
          "topicId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "postedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "profileImageUrl": {
            "type": "string"
          }
        }
      },
      "RecruiterRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]*$",
            "type": "string",
            "default": "Sok"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]*$",
            "type": "string",
            "default": "Chanthy"
          },
          "profilePicture": {
            "pattern": "^(https?://.*)?$",
            "type": "string",
            "default": "https://profile-picture.jpg"
          },
          "companyName": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string",
            "default": "company name"
          },
          "phoneNumber": {
            "pattern": "^\\+\\d{1,3}-\\d{6,10}$",
            "type": "string",
            "example": "+855-12345678",
            "default": "+855-12345678"
          },
          "industry": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string",
            "default": "industry"
          },
          "companyLocation": {
            "pattern": "^(?!\\s*$).{1,200}",
            "type": "string",
            "default": "Phnom Penh, Cambodia"
          },
          "bio": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string",
            "default": "Bio about the recruiter"
          },
          "companySite": {
            "pattern": "^(?!\\s*$).{1,255}",
            "type": "string",
            "default": "https://www.companysite.com"
          },
          "foundedAt": {
            "type": "string",
            "format": "date"
          },
          "coverPicture": {
            "pattern": "^(https?://.*)?$",
            "type": "string",
            "default": "https://cv.pdf"
          }
        }
      },
      "ApiResponseRecruiter": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Recruiter"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Recruiter": {
        "type": "object",
        "properties": {
          "recruiterId": {
            "type": "string",
            "format": "uuid"
          },
          "companyName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "companyLocation": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "foundedAt": {
            "type": "string",
            "format": "date-time"
          },
          "coverPicture": {
            "type": "string"
          },
          "userInformation": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ProjectPositionRequest": {
        "required": [
          "positionId"
        ],
        "type": "object",
        "properties": {
          "maxMembers": {
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProjectRequest": {
        "required": [
          "description",
          "endAt",
          "isOpen",
          "positions",
          "skills",
          "startAt",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string"
          },
          "description": {
            "pattern": "^(?!\\s*$).{1,255}",
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPositionRequest"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ApiResponseProject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Project"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JoinProject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isApproved": {
            "type": "boolean"
          },
          "isInvited": {
            "type": "boolean"
          },
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "developer": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "positionName": {
            "type": "string"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "owner": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPosition"
            }
          },
          "joinProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinProject"
            }
          }
        }
      },
      "ProjectPosition": {
        "type": "object",
        "properties": {
          "maxMembers": {
            "type": "integer",
            "format": "int32"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          },
          "positionName": {
            "type": "string"
          }
        }
      },
      "ApiResponseJoinJobResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JoinJobResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "format": "uuid"
          },
          "salary": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "pax": {
            "type": "integer",
            "format": "int32"
          },
          "jobType": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postedDate": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "JoinJobResponse": {
        "type": "object",
        "properties": {
          "joinJobId": {
            "type": "string"
          },
          "isInvited": {
            "type": "boolean"
          },
          "job": {
            "$ref": "#/components/schemas/JobResponse"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "Benefit": {
        "type": "object",
        "properties": {
          "benefit": {
            "type": "string"
          }
        }
      },
      "JobBoard": {
        "type": "object",
        "properties": {
          "requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Requirement"
            }
          },
          "responsibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Responsibility"
            }
          },
          "benefits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Benefit"
            }
          }
        }
      },
      "JobsRequest": {
        "required": [
          "description",
          "jobBoard",
          "jobTypeId",
          "location",
          "pax",
          "positionId",
          "salary",
          "skillId",
          "status"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "format": "uuid",
            "default": "f341c41b-5c02-423a-b518-03b8d2544c27"
          },
          "salary": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "jobBoard": {
            "$ref": "#/components/schemas/JobBoard"
          },
          "jobTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "pax": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skillId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Requirement": {
        "type": "object",
        "properties": {
          "requirement": {
            "type": "string"
          }
        }
      },
      "Responsibility": {
        "type": "object",
        "properties": {
          "responsibility": {
            "type": "string"
          }
        }
      },
      "ApiResponseJobResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JobResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HackathonRequest": {
        "required": [
          "description",
          "endDate",
          "isAvailable",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string",
            "default": "title"
          },
          "description": {
            "pattern": "^(?!\\s*$).{1,255}",
            "type": "string",
            "default": "description"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "fullScore": {
            "pattern": "^[0-9]+$",
            "type": "string",
            "default": "full score"
          }
        }
      },
      "ApiResponseHackathon": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Hackathon"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Hackathon": {
        "type": "object",
        "properties": {
          "hackathonId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "amountParticipant": {
            "type": "integer",
            "format": "int32"
          },
          "fullScore": {
            "type": "integer",
            "format": "int32"
          },
          "creatorId": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "joinHackathons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinHackathon"
            }
          }
        }
      },
      "JoinHackathon": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time"
          },
          "submission": {
            "type": "string"
          },
          "submittedAt": {
            "type": "string",
            "format": "date-time"
          },
          "developerId": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "CommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      },
      "ApiResponseComment": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Comment"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CodeChallengeRequest": {
        "required": [
          "description",
          "instruction",
          "language",
          "score",
          "starterCode",
          "testCase",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instruction": {
            "type": "string"
          },
          "testCase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCase"
            }
          },
          "score": {
            "minimum": 100,
            "type": "integer",
            "format": "int32"
          },
          "starterCode": {
            "type": "string"
          },
          "language": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z+#]+$",
            "type": "string",
            "description": "Programming language used in the challenge",
            "example": "Java",
            "default": "Java"
          }
        }
      },
      "TestCase": {
        "required": [
          "expectedOutput",
          "input"
        ],
        "type": "object",
        "properties": {
          "input": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "expectedOutput": {
            "type": "object"
          }
        }
      },
      "ApiResponseCodingChallengeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/CodingChallengeResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CodingChallengeResponse": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instruction": {
            "type": "string"
          },
          "testCase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCase"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "starterCode": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "participation": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeveloperProfilesRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]*$",
            "type": "string",
            "default": "Sok"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]*$",
            "type": "string",
            "default": "Chanthy"
          },
          "coverPicture": {
            "pattern": "^(https?://.*)?$",
            "type": "string",
            "default": "https://cover-picture.jpg"
          },
          "profilePicture": {
            "pattern": "^(https?://.*)?$",
            "type": "string",
            "default": "https://profile-picture.jpg"
          },
          "bio": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "employeeStatus": {
            "type": "string",
            "enum": [
              "UNEMPLOYED",
              "EMPLOYED",
              "FREELANCE"
            ]
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "cv": {
            "pattern": "^(https?://.*)?$",
            "type": "string",
            "default": "https://cv.pdf"
          },
          "address": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "phoneNumber": {
            "pattern": "^\\+\\d{1,3}-\\d{6,10}$",
            "type": "string",
            "example": "+855-12345678",
            "default": "+855-12345678"
          },
          "female": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseDeveloperProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/DeveloperProfileResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeveloperProfileResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "coverPicture": {
            "type": "string"
          },
          "cv": {
            "type": "string"
          },
          "employeeStatus": {
            "type": "string",
            "enum": [
              "UNEMPLOYED",
              "EMPLOYED",
              "FREELANCE"
            ]
          },
          "jobType": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "female": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseUpvote": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Upvote"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Upvote": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SubmitCodeRequest": {
        "required": [
          "code",
          "timeSubmitted"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "timeSubmitted": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseListString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RequestToJoinProject": {
        "required": [
          "description",
          "positionId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "pattern": "^(?!\\s*$).{1,100}",
            "type": "string"
          },
          "description": {
            "pattern": "^(?!\\s*$).{1,255}",
            "type": "string"
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ApiResponseJoinProject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JoinProject"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InviteProjectRequest": {
        "required": [
          "description",
          "developerId",
          "positionId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "default": "title"
          },
          "description": {
            "type": "string",
            "default": "description"
          },
          "developerId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "positionId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ApiResponseListJoinProject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinProject"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PasswordRequest": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=!]).{8,}$",
            "type": "string",
            "default": "password"
          }
        }
      },
      "ApiResponseObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JoinJobRequest": {
        "required": [
          "coverLetter",
          "description",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "coverLetter": {
            "type": "string"
          }
        }
      },
      "InviteJobRequest": {
        "required": [
          "description",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ApiResponseFileMetadata": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/FileMetadata"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FileMetadata": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseBookmark": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Bookmark"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Bookmark": {
        "type": "object",
        "properties": {
          "targetId": {
            "type": "string",
            "format": "uuid"
          },
          "bookmarkBy": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AppUserRequest": {
        "required": [
          "email",
          "firstName",
          "isRecruiter",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "pattern": "^\\w+$",
            "type": "string",
            "default": "first name"
          },
          "lastName": {
            "pattern": "^\\w+$",
            "type": "string",
            "default": "last name"
          },
          "email": {
            "pattern": "^[\\w\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            "type": "string",
            "description": "Full name of the user",
            "example": "example@gmail.com",
            "default": "example@gmail.com"
          },
          "isRecruiter": {
            "type": "boolean"
          },
          "password": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=!]).{8,}$",
            "type": "string"
          }
        }
      },
      "ApiResponseAppUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/AppUserResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "pattern": "^[\\w\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$",
            "type": "string",
            "description": "email of the user",
            "example": "example@gmail.com",
            "default": "example@gmail.com"
          },
          "password": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=!]).{8,}$",
            "type": "string",
            "description": "password",
            "example": "password",
            "default": "password"
          }
        }
      },
      "ApiResponseAuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/AuthResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ResetRequest": {
        "required": [
          "email",
          "otp",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          },
          "password": {
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=!]).{8,}$",
            "type": "string"
          }
        }
      },
      "ApiResponseString": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseProjectResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/ProjectResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProjectResponse": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isOpen": {
            "type": "boolean"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "owner": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          }
        }
      },
      "SubmitHackathonRequest": {
        "type": "object",
        "properties": {
          "submissionLink": {
            "type": "string"
          }
        }
      },
      "EvaluateDeveloperRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseListTopicResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopicResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TopicResponse": {
        "type": "object",
        "properties": {
          "topicId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "postedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ApiResponseListSubmissionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmissionResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubmissionResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "submitTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseListProjectResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseListProjectPosition": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPosition"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseListJoinJobResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinJobResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseJoinJobDetailResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/JoinJobDetailResponse"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JoinJobDetailResponse": {
        "type": "object",
        "properties": {
          "joinJobId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cv": {
            "type": "string"
          },
          "coverLetter": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ApiResponseListJobResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseJobs": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/Jobs"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Jobs": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "string"
          },
          "salary": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "postedDate": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "jobBoard": {
            "$ref": "#/components/schemas/JobBoard"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jobType": {
            "type": "string"
          },
          "pax": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseListHackathonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HackathonResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HackathonResponse": {
        "type": "object",
        "properties": {
          "hackathonId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isBookmark": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "amountParticipant": {
            "type": "integer",
            "format": "int32"
          },
          "fullScore": {
            "type": "integer",
            "format": "int32"
          },
          "creatorId": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ApiResponseDeveloperBadge": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/DeveloperBadge"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Badges": {
        "type": "object",
        "properties": {
          "badgeId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DeveloperBadge": {
        "type": "object",
        "properties": {
          "badges": {
            "$ref": "#/components/schemas/Badges"
          }
        }
      },
      "ApiResponseListSkill": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skill"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseListPosition": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseListJobType": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobType"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JobType": {
        "type": "object",
        "properties": {
          "jobTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "jobTypeName": {
            "type": "string"
          }
        }
      },
      "ApiResponseListCodingChallengeResponseCard": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodingChallengeResponseCard"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CodingChallengeResponseCard": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "language": {
            "type": "string"
          },
          "profileUser": {
            "type": "string"
          },
          "participation": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseListObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseListDeveloperProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeveloperProfileResponse"
            }
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponseCodeChallenge": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/CodeChallenge"
          },
          "paginationResponse": {
            "$ref": "#/components/schemas/PaginationResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CodeChallenge": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instruction": {
            "type": "string"
          },
          "testCase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestCase"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "creator": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "starterCode": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "profileUser": {
            "type": "string"
          },
          "participation": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      }
    }
  }
}